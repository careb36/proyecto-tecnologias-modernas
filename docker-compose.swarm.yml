version: '3.8'

services:
  app:
    image: ${CI_REGISTRY_IMAGE:-app:latest}
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DATABASE_URL=jdbc:oracle:thin:@oracle:1521:xe
      - DATABASE_USER=system
      - DATABASE_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    networks:
      - tech-stack
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      - ORACLE_PWD_FILE=/run/secrets/oracle_password
    secrets:
      - oracle_password
    volumes:
      - oracle_data:/opt/oracle/oradata
    networks:
      - tech-stack
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
    secrets:
      - grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tech-stack
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    networks:
      - tech-stack
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
    networks:
      - tech-stack
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - tech-stack
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  oracle_data:
  grafana_data:
  loki_data:
  prometheus_data:
  portainer_data:

networks:
  tech-stack:
    driver: overlay
    attachable: true

secrets:
  db_password:
    external: true
  oracle_password:
    external: true
  grafana_password:
    external: true
